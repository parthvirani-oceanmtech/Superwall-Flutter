group 'com.superwall.superwallkit_flutter'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.7.10'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    if (project.android.hasProperty("namespace")) {
        namespace 'com.superwall.superwallkit_flutter'
    }

    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    defaultConfig {
        minSdkVersion 23
    }

    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }

    // Read from local.properties
    def localPropertiesFile = rootProject.file('local.properties')
    def localProperties = new Properties()
    if (localPropertiesFile.exists()) {
        localPropertiesFile.withInputStream { localProperties.load(it) }
    }

    // Set a default value if the property is not found
    def waitForDebugger = localProperties.getProperty('WAIT_FOR_DEBUGGER', 'false')

    defaultConfig {
        buildConfigField "boolean", "WAIT_FOR_DEBUGGER", waitForDebugger
    }
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.mockito:mockito-core:5.4.0'

    implementation "com.superwall.sdk:superwall-android:1.1.5"
    implementation 'com.android.billingclient:billing:7.0.0'
}